;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned char ic74156();
;void main(void)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0016 DDRD = 0x82;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0017 PORTD = 0x04;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0018 led = 0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0019 
; 0000 001A while (1)
;PCODE: $00000014 VOL: 0
; 0000 001B {
; 0000 001C delay_ms(30);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001D if (SW == 0){
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001E int check = ic74156();
; 0000 001F delay_ms(30);
;PCODE: $0000001B VOL: 0
;	check -> Y+0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0020 if (check == 1) led = 1;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0021 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0022 }
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0023 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;unsigned char ic74156()
; 0000 0025 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0026 
; 0000 0027 signed char j,i;
; 0000 0028 DDRA = 0x70;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;	j -> R17
;	i -> R16
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0029 DDRB = 0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002A DDRC = 0x0F0;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002B DDRD = 0x82;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002C GND = 0;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002D VCC = 1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002E PORTA.5 = 1; PORTC.6 = 1;  //enables
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002F // input 1001
; 0000 0030 
; 0000 0031 for (i = 0;i <= 3;i++)
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0032 {
; 0000 0033 PORTA.6 =Read_BIT(i,1);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0034 PORTC.7 =Read_BIT(i,0);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0035 
; 0000 0036 for (j = 0; j <= 1;j++)
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0037 {
; 0000 0038 PORTA.4 = j;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0039 PORTC.5 = !j;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 003A PORTA.5 = 0;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 003B PORTC.6 = 0;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 003C 
; 0000 003D //loadmodeon;
; 0000 003E PORTA = PORTA | 0x80;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 003F PORTD = PORTD | 0x70;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0040 PORTB = PORTB | 0x0f;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0041 delay_ms(30);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0042 //PINA.3=1;PINA.4=1;PINA.5=1;PINA.6=1;  PINC.4=1;PINC.5=1;PINC.6=1;PINC.7=1;
; 0000 0043 
; 0000 0044 if (((!PINA.7<<3)+ (!PIND.4<<2)+ (!PIND.5<<1)+(!PIND.6))!=(j<<i) ) return 0;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0045 delay_ms(30);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0046 if (((!PINB.0<<3)+ (!PINB.1<<2)+ (!PINB.2<<1)+(!PINB.3))!=(j<<i) ) return 0;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 0047 
; 0000 0048 //PINA.3=0;PINA.4=0;PINA.5=0;PINA.6=0;  PINC.4=0;PINC.5=0;PINC.6=0;PINC.7=0;
; 0000 0049 PORTA &= 0x7F;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 004A PORTD &= 0x8F;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 004B PORTB &= 0xF0;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 004C 
; 0000 004D delay_ms(10);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 004E 
; 0000 004F //PORTA.3=0;PORTA.4=0;PORTA.5=0;PORTA.6=0;  PORTC.4=0;PORTC.5=0;PORTC.6=0;PORTC.7=0;
; 0000 0050 //if (PINA.3 == 1) led = 1;
; 0000 0051 
; 0000 0052 
; 0000 0053 //if (((PINA.3<<3)+(PINA.4<<2)+(PINA.5<<1)+(PINA.6))!=0 ) return 0;
; 0000 0054 //if (((PINC.4<<3)+(PINC.5<<2)+(PINC.6<<1)+(PINC.7))!=0 ) return 0;
; 0000 0055 //LOADMODEOFF;*/
; 0000 0056 PORTA.5 = 1;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0057 PORTC.6 = 1;
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0058 }
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0059 //loadmodeon;
; 0000 005A //PORTA.3=1;PORTA.4=1;PORTA.5=1;PORTA.6=1;  PORTC.4=1;PORTC.5=1;PORTC.6=1;PORTC.7=1;
; 0000 005B PORTA = PORTA | 0x80;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 005C PORTD = PORTD | 0x70;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 005D PORTB = PORTB | 0x0f;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 005E delay_ms(30);
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 005F if (((!PINA.7<<3)+ (!PIND.4<<2)+ (!PIND.5<<1)+(!PIND.6))!=0 ) return 0;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0060 delay_ms(30);
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0061 if (((!PINB.0<<3)+ (!PINB.1<<2)+ (!PINB.2<<1)+(!PINB.3))!=0 ) return 0;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 0062 
; 0000 0063 
; 0000 0064 PORTA &= 0x7F;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0000 0065 PORTD &= 0x8F;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0066 PORTB &= 0xF0;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0000 0067 //PORTA.3=0;PORTA.4=0;PORTA.5=0;PORTA.6=0;  PORTC.4=0;PORTC.5=0;PORTC.6=0;PORTC.7=0;
; 0000 0068 
; 0000 0069 //if (((PINA.3<<3)+(PINA.4<<2)+(PINA.5<<1)+(PINA.6))!=0) return 0;
; 0000 006A //if (((PINC.4<<3)+(PINC.5<<2)+(PINC.6<<1)+(PINC.7))!=0 ) return 0;
; 0000 006B // LOADMODEOFF;
; 0000 006C }
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 006D 
; 0000 006E VCC = 0;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 006F return 1;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 0070 }
;PCODE: $00000138 VOL: 0
